package thing;

enum GlobalType {
  A = 0; /* a comment */
  B = 1;
  C = 2;
}

// This is my Person.
message Person {
  string name = 1;
  wstring wide_name = 5;
  int32 id = 2;  // Unique ID number for this person.
  string email = 3;

  enum OuterPhoneType {
    CELL = 0;
  }

  message PhoneNumber {
    /*
     * a C-style comment
     */
    enum InnerPhoneType {
      HOME = 1;
      MOBILE = 0;
      WORK = 2;
    }

    string number = 1;
    InnerPhoneType itype = 2;
    OuterPhoneType otype = 3;
    GlobalType gtype = 4;
  }

  repeated PhoneNumber phone_vec = 4;

  // Partially qualified type references
  PhoneNumber.InnerPhoneType ph_type_v2 = 10 [ default = HOME ];
  PhoneNumber.InnerPhoneType ph_type_v3 = 11;

  extensions 100 to 199;
}

message AddressBook {
  repeated Person person_vec = 1;
  repeated string x = 2;
  repeated int32 y = 3;

  map<int32, int64> int_map = 4;
  map<int32, string> string_map = 5;
  map<int32, Person> person_map = 6;
}
